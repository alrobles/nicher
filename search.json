[{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://alrobles.github.io/nicher/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://alrobles.github.io/nicher/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angel Robles. Author, maintainer. Laura Jimenez. Contributor.","code":""},{"path":"http://alrobles.github.io/nicher/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Robles (2024). nicher: Estimates Ecological Niche Models Using Ellipses. R package version 1.0.0, https://github.com/alrobles/nicher, https://alrobles.github.io/nicher/, https://alrobles.github.io/nicher.","code":"@Manual{,   title = {nicher: Estimates Ecological Niche Models Using Ellipses},   author = {Angel Robles},   year = {2024},   note = {R package version 1.0.0, https://github.com/alrobles/nicher, https://alrobles.github.io/nicher/},   url = {https://alrobles.github.io/nicher}, }"},{"path":"http://alrobles.github.io/nicher/index.html","id":"nicher","dir":"","previous_headings":"","what":"Estimates Ecological Niche Models Using Ellipses","title":"Estimates Ecological Niche Models Using Ellipses","text":"goal nicher create ecological niche models based ellipse model","code":""},{"path":"http://alrobles.github.io/nicher/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimates Ecological Niche Models Using Ellipses","text":"can install development version nicher GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"alrobles/nicher\")"},{"path":"http://alrobles.github.io/nicher/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Estimates Ecological Niche Models Using Ellipses","text":"basic example shows solve common problem. First get shapefile accesibility area (M):  get environmental variables model:   get parameters ellipse: plot ellipse (2 vars case): plot ellipse (3 vars case): predict suitability given environmental data (2 vars case): Finally predict suitability given environmental data (3 vars case world):","code":"library(nicher) library(terra) #> Warning: package 'terra' was built under R version 4.2.3 #> terra 1.7.39   M_path <- system.file(\"extdata\", \"Mshp_test.rds\", package=\"nicher\") Mshp <- terra::unwrap(readr::read_rds(M_path)) plot(Mshp) stack_path <- system.file(\"extdata\", \"stack_1_12_crop.rds\", package=\"nicher\") # 2 variables stack_1_12 <- terra::unwrap(readr::read_rds(stack_path)) plot(stack_1_12) # 3 variables stack_1_12_19 <- get_example_data(\"stack_1_12_19\") plot(stack_1_12_19) pars_2var <-  get_ENM_par(rawSpOccPnts, stack_1_12, Mshp, method = \"mahalanobis\")  pars_3var <-  get_ENM_par(rawSpOccPnts, stack_1_12_19, Mshp, method = \"mahalanobis\")"},{"path":"http://alrobles.github.io/nicher/reference/ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Ellipse constructor — ellipse","title":"Ellipse constructor — ellipse","text":"Constructor function create ellipse.","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ellipse constructor — ellipse","text":"","code":"ellipse(param_list)"},{"path":"http://alrobles.github.io/nicher/reference/ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ellipse constructor — ellipse","text":"param_list list parameters ellipse object. First element mu vector. Second element square matrix covariates","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ellipse constructor — ellipse","text":"ellipse","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ellipse constructor — ellipse","text":"","code":"ellipse(get_ellip_par(spOccPnts)) #> $mu #>     bio1WH    bio12WH  #>   21.39775 1872.49315  #>  #> $S #>             bio1WH     bio12WH #> bio1WH    7.977662    406.9154 #> bio12WH 406.915434 458467.6979 #>"},{"path":"http://alrobles.github.io/nicher/reference/ellipse_par_example.html","id":null,"dir":"Reference","previous_headings":"","what":"An ellipse parameter object example. Is a list with two elements. #' @format A list with two elements. One vector and one matrix:  mu mu parameters of the ellipse S Covariance parameters of the ellipse  — ellipse_par_example","title":"An ellipse parameter object example. Is a list with two elements. #' @format A list with two elements. One vector and one matrix:  mu mu parameters of the ellipse S Covariance parameters of the ellipse  — ellipse_par_example","text":"ellipse parameter object example. list two elements. #' @format list two elements. One vector one matrix: mu mu parameters ellipse S Covariance parameters ellipse","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse_par_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An ellipse parameter object example. Is a list with two elements. #' @format A list with two elements. One vector and one matrix:  mu mu parameters of the ellipse S Covariance parameters of the ellipse  — ellipse_par_example","text":"","code":"ellipse_par_example"},{"path":"http://alrobles.github.io/nicher/reference/ellipse_par_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An ellipse parameter object example. Is a list with two elements. #' @format A list with two elements. One vector and one matrix:  mu mu parameters of the ellipse S Covariance parameters of the ellipse  — ellipse_par_example","text":"object class ellipse length 2.","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Ellipse points — ellipse_points","title":"Ellipse points — ellipse_points","text":"Ellipse points","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ellipse points — ellipse_points","text":"","code":"ellipse_points(par_ellipse, columns = c(1, 2), n_points = 100)"},{"path":"http://alrobles.github.io/nicher/reference/ellipse_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ellipse points — ellipse_points","text":"par_ellipse ellipse object ellipse parameters columns number columns ellipse get points n_points number points ellipses plot","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ellipse points — ellipse_points","text":"data frame coordinates plot","code":""},{"path":"http://alrobles.github.io/nicher/reference/ellipse_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ellipse points — ellipse_points","text":"","code":"ellipse_points(ellipse_par_example) #>               x         y variable #> 1   -52.1089888 2230.6113      1_2 #> 2   -51.0330167 2349.2488      1_2 #> 3   -49.6564537 2467.4061      1_2 #> 4   -47.9848427 2584.6077      1_2 #> 5   -46.0249147 2700.3814      1_2 #> 6   -43.7845617 2814.2612      1_2 #> 7   -41.2728046 2925.7884      1_2 #> 8   -38.4997576 3034.5141      1_2 #> 9   -35.4765867 3140.0003      1_2 #> 10  -32.2154650 3241.8224      1_2 #> 11  -28.7295241 3339.5703      1_2 #> 12  -25.0328006 3432.8504      1_2 #> 13  -21.1401798 3521.2872      1_2 #> 14  -17.0673360 3604.5245      1_2 #> 15  -12.8306690 3682.2272      1_2 #> 16   -8.4472385 3754.0823      1_2 #> 17   -3.9346950 3819.8006      1_2 #> 18    0.6887912 3879.1174      1_2 #> 19    5.4046028 3931.7939      1_2 #> 20   10.1937509 3977.6180      1_2 #> 21   15.0369514 4016.4051      1_2 #> 22   19.9147024 4047.9991      1_2 #> 23   24.8073629 4072.2727      1_2 #> 24   29.6952319 4089.1282      1_2 #> 25   34.5586277 4098.4978      1_2 #> 26   39.3779670 4100.3436      1_2 #> 27   44.1338441 4094.6584      1_2 #> 28   48.8071089 4081.4649      1_2 #> 29   53.3789436 4060.8163      1_2 #> 30   57.8309391 4032.7957      1_2 #> 31   62.1451688 3997.5160      1_2 #> 32   66.3042609 3955.1192      1_2 #> 33   70.2914680 3905.7761      1_2 #> 34   74.0907352 3849.6853      1_2 #> 35   77.6867642 3787.0727      1_2 #> 36   81.0650750 3718.1904      1_2 #> 37   84.2120643 3643.3157      1_2 #> 38   87.1150603 3562.7502      1_2 #> 39   89.7623737 3476.8183      1_2 #> 40   92.1433447 3385.8660      1_2 #> 41   94.2483860 3290.2595      1_2 #> 42   96.0690212 3190.3838      1_2 #> 43   97.5979194 3086.6411      1_2 #> 44   98.8289242 2979.4491      1_2 #> 45   99.7570788 2869.2393      1_2 #> 46  100.3786458 2756.4557      1_2 #> 47  100.6911224 2641.5523      1_2 #> 48  100.6932504 2524.9919      1_2 #> 49  100.3850212 2407.2437      1_2 #> 50   99.7676760 2288.7818      1_2 #> 51   98.8437005 2170.0834      1_2 #> 52   97.6168153 2051.6263      1_2 #> 53   96.0919606 1933.8876      1_2 #> 54   94.2752764 1817.3413      1_2 #> 55   92.1740780 1702.4567      1_2 #> 56   89.7968261 1589.6964      1_2 #> 57   87.1530931 1479.5145      1_2 #> 58   84.2535243 1372.3546      1_2 #> 59   81.1097953 1268.6483      1_2 #> 60   77.7345647 1168.8130      1_2 #> 61   74.1414235 1073.2509      1_2 #> 62   70.3448399  982.3466      1_2 #> 63   66.3601015  896.4664      1_2 #> 64   62.2032533  815.9558      1_2 #> 65   57.8910335  741.1393      1_2 #> 66   53.4408060  672.3179      1_2 #> 67   48.8704902  609.7688      1_2 #> 68   44.1984892  553.7440      1_2 #> 69   39.4436155  504.4689      1_2 #> 70   34.6250152  462.1420      1_2 #> 71   29.7620911  426.9337      1_2 #> 72   24.8744247  398.9859      1_2 #> 73   19.9816966  378.4109      1_2 #> 74   15.1036083  365.2918      1_2 #> 75   10.2598021  359.6813      1_2 #> 76    5.4697823  361.6019      1_2 #> 77    0.7528366  371.0461      1_2 #> 78   -3.8720415  387.9756      1_2 #> 79   -8.3862293  412.3225      1_2 #> 80  -12.7715498  443.9886      1_2 #> 81  -17.0103447  482.8464      1_2 #> 82  -21.0855460  528.7394      1_2 #> 83  -24.9807443  581.4829      1_2 #> 84  -28.6802549  640.8645      1_2 #> 85  -32.1691813  706.6451      1_2 #> 86  -35.4334748  778.5598      1_2 #> 87  -38.4599912  856.3190      1_2 #> 88  -41.2365438  939.6096      1_2 #> 89  -43.7519524 1028.0963      1_2 #> 90  -45.9960883 1121.4227      1_2 #> 91  -47.9599153 1219.2130      1_2 #> 92  -49.6355256 1321.0735      1_2 #> 93  -51.0161722 1426.5940      1_2 #> 94  -52.0962957 1535.3497      1_2 #> 95  -52.8715468 1646.9025      1_2 #> 96  -53.3388038 1760.8033      1_2 #> 97  -53.4961854 1876.5936      1_2 #> 98  -53.3430577 1993.8069      1_2 #> 99  -52.8800374 2111.9714      1_2 #> 100 -52.1089888 2230.6113      1_2 ellipse_points(ellipse_par_example, columns = c(1, 3)  ) #>              x           y variable #> 1   -53.464245  212.242729      1_3 #> 2   -53.168285  260.959448      1_3 #> 3   -52.563137  309.479104      1_3 #> 4   -51.651236  357.606326      1_3 #> 5   -50.436254  405.147324      1_3 #> 6   -48.923085  451.910667      1_3 #> 7   -47.117821  497.708054      1_3 #> 8   -45.027731  542.355077      1_3 #> 9   -42.661231  585.671956      1_3 #> 10  -40.027851  627.484271      1_3 #> 11  -37.138193  667.623659      1_3 #> 12  -34.003895  705.928491      1_3 #> 13  -30.637575  742.244527      1_3 #> 14  -27.052790  776.425537      1_3 #> 15  -23.263974  808.333885      1_3 #> 16  -19.286383  837.841087      1_3 #> 17  -15.136033  864.828329      1_3 #> 18  -10.829637  889.186942      1_3 #> 19   -6.384535  910.818843      1_3 #> 20   -1.818626  929.636927      1_3 #> 21    2.849705  945.565422      1_3 #> 22    7.601660  958.540187      1_3 #> 23   12.418106  968.508980      1_3 #> 24   17.279647  975.431658      1_3 #> 25   22.166707  979.280347      1_3 #> 26   27.059610  980.039550      1_3 #> 27   31.938651  977.706208      1_3 #> 28   36.784187  972.289719      1_3 #> 29   41.576704  963.811892      1_3 #> 30   46.296905  952.306864      1_3 #> 31   50.925784  937.820962      1_3 #> 32   55.444702  920.412516      1_3 #> 33   59.835463  900.151624      1_3 #> 34   64.080386  877.119868      1_3 #> 35   68.162379  851.409990      1_3 #> 36   72.065006  823.125514      1_3 #> 37   75.772551  792.380331      1_3 #> 38   79.270085  759.298243      1_3 #> 39   82.543526  724.012458      1_3 #> 40   85.579693  686.665060      1_3 #> 41   88.366359  647.406434      1_3 #> 42   90.892304  606.394661      1_3 #> 43   93.147356  563.794880      1_3 #> 44   95.122437  519.778626      1_3 #> 45   96.809591  474.523136      1_3 #> 46   98.202027  428.210639      1_3 #> 47   99.294137  381.027618      1_3 #> 48  100.081523  333.164064      1_3 #> 49  100.561015  284.812705      1_3 #> 50  100.730682  236.168236      1_3 #> 51  100.589842  187.426530      1_3 #> 52  100.139061  138.783853      1_3 #> 53   99.380154   90.436073      1_3 #> 54   98.316177   42.577868      1_3 #> 55   96.951415   -4.598054      1_3 #> 56   95.291362  -50.901731      1_3 #> 57   93.342704  -96.146714      1_3 #> 58   91.113287 -140.150820      1_3 #> 59   88.612088 -182.736857      1_3 #> 60   85.849178 -223.733348      1_3 #> 61   82.835682 -262.975215      1_3 #> 62   79.583736 -300.304443      1_3 #> 63   76.106433 -335.570721      1_3 #> 64   72.417775 -368.632045      1_3 #> 65   68.532616 -399.355288      1_3 #> 66   64.466598 -427.616738      1_3 #> 67   60.236096 -453.302597      1_3 #> 68   55.858143 -476.309437      1_3 #> 69   51.350368 -496.544617      1_3 #> 70   46.730922 -513.926658      1_3 #> 71   42.018406 -528.385567      1_3 #> 72   37.231796 -539.863125      1_3 #> 73   32.390365 -548.313114      1_3 #> 74   27.513609 -553.701511      1_3 #> 75   22.621164 -556.006617      1_3 #> 76   17.732731 -555.219151      1_3 #> 77   12.867994 -551.342284      1_3 #> 78    8.046540 -544.391627      1_3 #> 79    3.287785 -534.395166      1_3 #> 80   -1.389110 -521.393156      1_3 #> 81   -5.965312 -505.437949      1_3 #> 82  -10.422396 -486.593793      1_3 #> 83  -14.742412 -464.936565      1_3 #> 84  -18.907968 -440.553472      1_3 #> 85  -22.902289 -413.542696      1_3 #> 86  -26.709291 -384.013000      1_3 #> 87  -30.313646 -352.083289      1_3 #> 88  -33.700839 -317.882134      1_3 #> 89  -36.857231 -281.547249      1_3 #> 90  -39.770114 -243.224944      1_3 #> 91  -42.427758 -203.069528      1_3 #> 92  -44.819461 -161.242692      1_3 #> 93  -46.935592 -117.912860      1_3 #> 94  -48.767632  -73.254505      1_3 #> 95  -50.308203  -27.447449      1_3 #> 96  -51.551101   19.323857      1_3 #> 97  -52.491323   66.871082      1_3 #> 98  -53.125081  115.002771      1_3 #> 99  -53.449824  163.525115      1_3 #> 100 -53.464245  212.242729      1_3"},{"path":"http://alrobles.github.io/nicher/reference/get_A_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the inverse of covariance matrix from environmental variables — get_A_matrix","title":"Calculates the inverse of covariance matrix from environmental variables — get_A_matrix","text":"Calculates inverse covariance matrix environmental variables","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_A_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the inverse of covariance matrix from environmental variables — get_A_matrix","text":"","code":"get_A_matrix(df)"},{"path":"http://alrobles.github.io/nicher/reference/get_A_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the inverse of covariance matrix from environmental variables — get_A_matrix","text":"df matrix data frame environmental variables","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_A_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the inverse of covariance matrix from environmental variables — get_A_matrix","text":"covariance matrix","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_A_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the inverse of covariance matrix from environmental variables — get_A_matrix","text":"","code":"get_A_matrix(spOccPnts) #>             bio1WH       bio12WH #> [1,]  0.1312938652 -1.165306e-04 #> [2,] -0.0001165306  2.284606e-06"},{"path":"http://alrobles.github.io/nicher/reference/get_ENM_par.html","id":null,"dir":"Reference","previous_headings":"","what":"get_ENM_par — get_ENM_par","title":"get_ENM_par — get_ENM_par","text":"get ellipsoid parameters Ecollogical fundamental niche model.","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_ENM_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_ENM_par — get_ENM_par","text":"","code":"get_ENM_par(   occPts,   env,   M_shp = NULL,   method = c(\"unbound\", \"bound\", \"mahalanobis\"),   fastmode = TRUE,   itnmax = 100,   return_best = TRUE )"},{"path":"http://alrobles.github.io/nicher/reference/get_ENM_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_ENM_par — get_ENM_par","text":"occPts data frame ocurrence points. species name, longitude latitude env raster stack M_shp shape file M hypothesis method Method selection. default, optimization negloglike function lower bound fastmode logical true L-BFGS-B method default itnmax maximum number iterations. return_best logical. true return best optimization. false return possible optimizations","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_ENM_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_ENM_par — get_ENM_par","text":"list parameters","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_ENM_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_ENM_par — get_ENM_par","text":"","code":"M_path <- system.file(\"extdata\", \"Mshp_test.rds\", package=\"nicher\") Mshp <- terra::unwrap(readr::read_rds(M_path)) stack_path <- system.file(\"extdata\", \"stack_1_12_crop.rds\", package=\"nicher\") stack_1_12 <- terra::unwrap(readr::read_rds(stack_path)) get_ENM_par(rawSpOccPnts, stack_1_12, Mshp, method = \"mahalanobis\") #> $mu #>     bio1WH    bio12WH  #>   21.41451 1882.60274  #>  #> $S #>             bio1WH     bio12WH #> bio1WH    8.073574    433.5456 #> bio12WH 433.545626 455709.4650 #>"},{"path":"http://alrobles.github.io/nicher/reference/get_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Environmental density from presence points — get_density","title":"Environmental density from presence points — get_density","text":"Environmental density presence points","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environmental density from presence points — get_density","text":"","code":"get_density(df, env)"},{"path":"http://alrobles.github.io/nicher/reference/get_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environmental density from presence points — get_density","text":"df data frame presence points env raster stack environmental information","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environmental density from presence points — get_density","text":"data frame environmental information probability density point","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environmental density from presence points — get_density","text":"","code":"get_density(spOccPnts) #>         bio1WH bio12WH         dens #>  [1,] 20.73091    2075 7.770190e-05 #>  [2,] 22.41057    1630 7.235030e-05 #>  [3,] 22.25763    2203 7.402862e-05 #>  [4,] 19.31113    1897 6.357269e-05 #>  [5,] 23.88845    3060 1.597821e-05 #>  [6,] 23.12673    2032 7.020946e-05 #>  [7,] 22.76155    1337 4.989341e-05 #>  [8,] 20.18799    2251 6.227519e-05 #>  [9,] 19.77320    1529 6.679636e-05 #> [10,] 21.94147    2183 7.630848e-05 #> [11,] 16.30925    1144 1.307390e-05 #> [12,] 22.55396    1250 4.608017e-05 #> [13,] 19.15915    1923 6.031521e-05 #> [14,] 21.92423    2415 6.177780e-05 #> [15,] 18.30095    2529 2.188582e-05 #> [16,] 20.68048    1930 8.163798e-05 #> [17,] 24.19290    1525 3.967183e-05 #> [18,] 23.83894    1282 3.269279e-05 #> [19,] 16.43809    1092 1.326448e-05 #> [20,] 22.74709    1398 5.423545e-05 #> [21,] 22.03944    1029 3.452973e-05 #> [22,] 27.67044    2215 7.228414e-06 #> [23,] 23.61539    1374 4.081815e-05 #> [24,] 25.83965    3651 1.578996e-06 #> [25,] 14.50923    1563 4.343221e-06 #> [26,] 17.58682     747 1.273147e-05 #> [27,] 23.31386     862 1.663649e-05 #> [28,] 26.99096    1306 5.233817e-06 #> [29,] 26.65801    1157 4.976928e-06 #> [30,] 17.36748    2033 2.640453e-05 #> [31,] 23.38448    3589 3.377910e-06 #> [32,] 16.26900     807 7.829063e-06 #> [33,] 21.52402    1828 8.483341e-05 #> [34,] 20.87229    2811 2.887355e-05 #> [35,] 21.63052    1224 5.157910e-05 #> [36,] 19.35501    1699 6.521166e-05 #> [37,] 22.56491    1887 7.801932e-05 #> [38,] 20.60624    1391 6.556942e-05 #> [39,] 23.61762    1006 2.089172e-05 #> [40,] 25.48557    1417 1.805992e-05 #> [41,] 25.11342    3426 4.280858e-06 #> [42,] 21.38318    1287 5.763030e-05 #> [43,] 18.72291    1286 4.315728e-05 #> [44,] 16.02533    2420 6.454058e-06 #> [45,] 26.18298    2968 8.858731e-06 #> [46,] 20.35045    2072 7.390891e-05 #> [47,] 20.91000    3461 4.290116e-06 #> [48,] 19.00921    2590 2.663814e-05 #> [49,] 19.21876    2919 1.368379e-05 #> [50,] 19.01612    1788 5.959589e-05 #> [51,] 22.30757    1826 8.007088e-05 #> [52,] 23.57381    1553 5.122248e-05 #> [53,] 22.95685    1722 6.884540e-05 #> [54,] 21.33614    1322 6.047250e-05 #> [55,] 20.42602    1561 7.422508e-05 #> [56,] 23.34570    1265 3.794323e-05 #> [57,] 20.15109    1454 6.691108e-05 #> [58,] 19.35501    1699 6.521166e-05 #> [59,] 20.91557    1856 8.393192e-05 #> [60,] 22.42379    1726 7.621144e-05 #> [61,] 21.98492    1590 7.455459e-05 #> [62,] 21.52402    1828 8.483341e-05 #> [63,] 23.17664    1832 6.848734e-05 #> [64,] 24.98680    2832 1.908051e-05 #> [65,] 20.68048    1930 8.163798e-05 #> [66,] 16.06038    1210 1.200394e-05 #> [67,] 24.79048    2453 3.424631e-05 #> [68,] 23.95322    1985 5.654255e-05 #> [69,] 17.48504    2404 1.771845e-05 #> [70,] 17.57528    1206 2.644117e-05 #> [71,] 22.47643    2953 2.381831e-05 #> [72,] 20.31801    1826 7.916228e-05 #> [73,] 20.86426    2161 7.466056e-05"},{"path":"http://alrobles.github.io/nicher/reference/get_ellip_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ellipsoid parameters. A function to compute average and the inverse of covariance matrix from environmental data — get_ellip_par","title":"Get ellipsoid parameters. A function to compute average and the inverse of covariance matrix from environmental data — get_ellip_par","text":"Get ellipsoid parameters. function compute average inverse covariance matrix environmental data","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_ellip_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ellipsoid parameters. A function to compute average and the inverse of covariance matrix from environmental data — get_ellip_par","text":"","code":"get_ellip_par(env)"},{"path":"http://alrobles.github.io/nicher/reference/get_ellip_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ellipsoid parameters. A function to compute average and the inverse of covariance matrix from environmental data — get_ellip_par","text":"env data frame containing environmental variables","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_ellip_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ellipsoid parameters. A function to compute average and the inverse of covariance matrix from environmental data — get_ellip_par","text":"list computed average environmental variables covariance matrix","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_ellip_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ellipsoid parameters. A function to compute average and the inverse of covariance matrix from environmental data — get_ellip_par","text":"","code":"get_ellip_par(spOccPnts) #> $mu #>     bio1WH    bio12WH  #>   21.39775 1872.49315  #>  #> $S #>             bio1WH     bio12WH #> bio1WH    7.977662    406.9154 #> bio12WH 406.915434 458467.6979 #>"},{"path":"http://alrobles.github.io/nicher/reference/get_env_var.html","id":null,"dir":"Reference","previous_headings":"","what":"get_env_var Function to extract environmental values from presence points — get_env_var","title":"get_env_var Function to extract environmental values from presence points — get_env_var","text":"get_env_var Function extract environmental values presence points","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_env_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_env_var Function to extract environmental values from presence points — get_env_var","text":"","code":"get_env_var(df, env)"},{"path":"http://alrobles.github.io/nicher/reference/get_env_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_env_var Function to extract environmental values from presence points — get_env_var","text":"df data frame presence points env raster environmental layers. Must projection string","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_env_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_env_var Function to extract environmental values from presence points — get_env_var","text":"","code":"stack_path <- system.file(\"extdata\", \"stack_1_12_crop.rds\", package=\"nicher\") stack_1_12 <- terra::unwrap(readr::read_rds(stack_path)) get_env_var(rawSpOccPnts, stack_1_12) #>      bio1WH bio12WH #> 1  20.73091    2075 #> 2  22.41057    1630 #> 3  22.25763    2203 #> 4  19.31113    1897 #> 5  23.88845    3060 #> 6  23.12673    2032 #> 7  22.76155    1337 #> 8  20.18799    2251 #> 9  19.77320    1529 #> 10 21.94147    2183 #> 11 16.30925    1144 #> 12 22.55396    1250 #> 13 19.15915    1923 #> 14 21.92423    2415 #> 15 18.30095    2529 #> 16 20.68048    1930 #> 17 24.19290    1525 #> 18 23.83894    1282 #> 19 16.43809    1092 #> 20 22.74709    1398 #> 21 22.03944    1029 #> 22 27.67044    2215 #> 23 24.83927    2112 #> 24 25.83965    3651 #> 25 14.50923    1563 #> 26 17.58682     747 #> 27 23.31386     862 #> 28 26.99096    1306 #> 29 26.65801    1157 #> 30 17.36748    2033 #> 31 23.38448    3589 #> 32 16.26900     807 #> 33 21.52402    1828 #> 34 20.87229    2811 #> 35 21.63052    1224 #> 36 19.35501    1699 #> 37 22.56491    1887 #> 38 20.60624    1391 #> 39 23.61762    1006 #> 40 25.48557    1417 #> 41 25.11342    3426 #> 42 21.38318    1287 #> 43 18.72291    1286 #> 44 16.02533    2420 #> 45 26.18298    2968 #> 46 20.35045    2072 #> 47 20.91000    3461 #> 48 19.00921    2590 #> 49 19.21876    2919 #> 50 19.01612    1788 #> 51 22.30757    1826 #> 52 23.57381    1553 #> 53 22.95685    1722 #> 54 21.33614    1322 #> 55 20.42602    1561 #> 56 23.34570    1265 #> 57 20.15109    1454 #> 58 19.35501    1699 #> 59 20.91557    1856 #> 60 22.42379    1726 #> 61 21.98492    1590 #> 62 21.52402    1828 #> 63 23.17664    1832 #> 64 24.98680    2832 #> 65 20.68048    1930 #> 66 16.06038    1210 #> 67 24.79048    2453 #> 68 23.95322    1985 #> 69 17.48504    2404 #> 70 17.57528    1206 #> 71 22.47643    2953 #> 72 20.31801    1826 #> 73 20.86426    2161"},{"path":"http://alrobles.github.io/nicher/reference/get_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return mammal shapefiles of Rodentia order — get_example_data","title":"Function to return mammal shapefiles of Rodentia order — get_example_data","text":"Function return mammal shapefiles Rodentia order","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return mammal shapefiles of Rodentia order — get_example_data","text":"","code":"get_example_data(file)"},{"path":"http://alrobles.github.io/nicher/reference/get_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return mammal shapefiles of Rodentia order — get_example_data","text":"file example file test r package","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to return mammal shapefiles of Rodentia order — get_example_data","text":"","code":"get_example_data(file = \"test\") #> [1] \"Data is online\""},{"path":"http://alrobles.github.io/nicher/reference/get_mahalanobis.html","id":null,"dir":"Reference","previous_headings":"","what":"Mahalanobis distance — get_mahalanobis","title":"Mahalanobis distance — get_mahalanobis","text":"Mahalanobis distance","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_mahalanobis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mahalanobis distance — get_mahalanobis","text":"","code":"get_mahalanobis(df, el_pars)"},{"path":"http://alrobles.github.io/nicher/reference/get_mahalanobis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mahalanobis distance — get_mahalanobis","text":"df data frame environmental information according presence points el_pars list ellipsoid parameters","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_mahalanobis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mahalanobis distance — get_mahalanobis","text":"vector Mahalanobis distance according point   environmental space","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_mahalanobis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mahalanobis distance — get_mahalanobis","text":"","code":"pars <- get_negloglike_optimr_par(spOccPnts, samMPts, lower = TRUE, fastmode = TRUE, itnmax = 1 ) #> fastmode #> TRUE #> Optimization starting  #> Methods used: #> L-BFGS-B #> Optimization finished.  #> L-BFGS-B is the returned method get_mahalanobis(spOccPnts, pars) #>  [1] 0.07287030 0.99869159 0.09564457 0.63016263 2.01990473 0.51931505 #>  [7] 2.20077587 0.21490163 1.10913071 0.04071999 4.67876906 2.47257954 #> [13] 0.68555273 0.11949621 1.75405465 0.18425300 2.48942359 3.20842080 #> [19] 4.73627253 1.94276915 3.33718185 5.13770990 2.61189057 5.92324522 #> [25] 6.12884817 5.41393920 5.13991846 7.07393541 7.36947051 2.04047284 #> [31] 4.30919824 6.19868070 0.32145328 0.97714704 2.21604333 0.87478588 #> [37] 0.48012289 1.41254738 4.49472261 4.31987731 4.20598738 1.88259745 #> [43] 2.26235410 4.18590750 3.50784068 0.14877050 3.83386404 1.32431089 #> [49] 2.18676440 0.89803496 0.49888836 1.89048191 1.00330190 1.73112286 #> [55] 0.90010394 2.89855481 1.24481934 0.87478588 0.25573058 0.75401744 #> [61] 0.96569267 0.32145328 0.86791093 2.08410671 0.18425300 4.73339288 #> [67] 1.45887627 1.08380417 2.29960504 3.27393291 1.27317703 0.37206971 #> [73] 0.03582950"},{"path":"http://alrobles.github.io/nicher/reference/get_negative_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the negative log-likelihood value from quadratic forms of environmental information from presence points and a sample from an M hypothesis — get_negative_log","title":"Get the negative log-likelihood value from quadratic forms of environmental information from presence points and a sample from an M hypothesis — get_negative_log","text":"Get negative log-likelihood value quadratic forms environmental information presence points sample M hypothesis","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negative_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the negative log-likelihood value from quadratic forms of environmental information from presence points and a sample from an M hypothesis — get_negative_log","text":"","code":"get_negative_log(q1, q2)"},{"path":"http://alrobles.github.io/nicher/reference/get_negative_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the negative log-likelihood value from quadratic forms of environmental information from presence points and a sample from an M hypothesis — get_negative_log","text":"q1 quadratic terms presence points q2 quadratic terms M points","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negative_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the negative log-likelihood value from quadratic forms of environmental information from presence points and a sample from an M hypothesis — get_negative_log","text":"single value negative log-likelihood","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negative_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the negative log-likelihood value from quadratic forms of environmental information from presence points and a sample from an M hypothesis — get_negative_log","text":"","code":"par <- get_optim_par(spOccPnts) q1 <- mahalanobis(spOccPnts, par$mu, par$A, inverted = TRUE) q2 <- mahalanobis(samMPts, par$mu, par$A, inverted = TRUE) get_negative_log(q1, q2) #> [1] 661.8376"},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optim_par.html","id":null,"dir":"Reference","previous_headings":"","what":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Returns a list of — get_negloglike_optim_par","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Returns a list of — get_negloglike_optim_par","text":"get_negloglike_optim_par Function  optime negloglike function given parameters presence points sample environmental points M hypothesis. Returns list ","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optim_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Returns a list of — get_negloglike_optim_par","text":"","code":"get_negloglike_optim_par(env_pts, M_pts)"},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optim_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Returns a list of — get_negloglike_optim_par","text":"env_pts dataframe environmental variables extracted presence points M_pts dataframe sample environmental values inside M hypothesis region.","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optim_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Returns a list of — get_negloglike_optim_par","text":"list optimized parameters negloglike function. mu vector centroids S covariance matrix.","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optim_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Returns a list of — get_negloglike_optim_par","text":"","code":"get_negloglike_optim_par(head(spOccPnts, 30), samMPts) #> $mu #>     bio1WH    bio12WH  #>   17.17463 2414.46048  #>  #> $S #>              bio1WH    bio12WH #> bio1WH      8.57205   2009.529 #> bio12WH -2314.15689 465713.414 #>"},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optimr_par.html","id":null,"dir":"Reference","previous_headings":"","what":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Internally runs Returns a list of parameters — get_negloglike_optimr_par","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Internally runs Returns a list of parameters — get_negloglike_optimr_par","text":"get_negloglike_optim_par Function  optime negloglike function given parameters presence points sample environmental points M hypothesis. Internally runs Returns list parameters","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optimr_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Internally runs Returns a list of parameters — get_negloglike_optimr_par","text":"","code":"get_negloglike_optimr_par(   env_pts,   M_pts,   lower = FALSE,   itnmax = 100,   fastmode = FALSE,   return_best = TRUE,   precision = 3 )"},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optimr_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Internally runs Returns a list of parameters — get_negloglike_optimr_par","text":"env_pts dataframe environmental variables extracted presence points M_pts dataframe sample environmental values inside M hypothesis region. lower logical set create low bowndarie parameters M points itnmax maximum number iterations. fastmode logical true L-BFGS-B method default return_best logical. true return best optimization. false return possible optimizations precision numeric. decimal precision output variables. default 3","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optimr_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Internally runs Returns a list of parameters — get_negloglike_optimr_par","text":"list optimized parameters negloglike function","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_negloglike_optimr_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_negloglike_optim_par Function to optime negloglike function given parameters from presence points and a sample of environmental points from a M hypothesis. Internally runs Returns a list of parameters — get_negloglike_optimr_par","text":"","code":"get_negloglike_optimr_par(head(spOccPnts, 10), samMPts, fastmode = TRUE, itnmax = 1) #> fastmode #> TRUE #> Optimization starting  #> Methods used: #> L-BFGS-B #> Optimization finished.  #> L-BFGS-B is the returned method #> $mu #>   bio1WH  bio12WH  #>   20.971 2019.703  #>  #> $S #>          bio1WH    bio12WH #> bio1WH    2.193    252.165 #> bio12WH 252.165 230331.789 #>"},{"path":"http://alrobles.github.io/nicher/reference/get_optim_par.html","id":null,"dir":"Reference","previous_headings":"","what":"get_optim_par Get the parameters for the optimization of the Mahalanobis ellipse — get_optim_par","title":"get_optim_par Get the parameters for the optimization of the Mahalanobis ellipse — get_optim_par","text":"get_optim_par Get parameters optimization Mahalanobis ellipse","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_optim_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_optim_par Get the parameters for the optimization of the Mahalanobis ellipse — get_optim_par","text":"","code":"get_optim_par(df)"},{"path":"http://alrobles.github.io/nicher/reference/get_optim_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_optim_par Get the parameters for the optimization of the Mahalanobis ellipse — get_optim_par","text":"df data frame environmental information","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_optim_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_optim_par Get the parameters for the optimization of the Mahalanobis ellipse — get_optim_par","text":"list two objects. vector centers ellipse matrix inverse covariance matrix","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_optim_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_optim_par Get the parameters for the optimization of the Mahalanobis ellipse — get_optim_par","text":"","code":"get_optim_par(spOccPnts) #> $mu #>     bio1WH    bio12WH  #>   21.39775 1872.49315  #>  #> $A #>             bio1WH       bio12WH #> [1,]  0.1312938652 -1.165306e-04 #> [2,] -0.0001165306  2.284606e-06 #>"},{"path":"http://alrobles.github.io/nicher/reference/get_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"get_suitability Function that calculates the log(suitability) — get_suitability","title":"get_suitability Function that calculates the log(suitability) — get_suitability","text":"get_suitability Function calculates log(suitability)","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_suitability Function that calculates the log(suitability) — get_suitability","text":"","code":"get_suitability(df, el_pars)"},{"path":"http://alrobles.github.io/nicher/reference/get_suitability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_suitability Function that calculates the log(suitability) — get_suitability","text":"df data frame environmental information el_pars list ellipse parameter. Contains vector means covariance matrix. came MLE optimization calculated  presence data.","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_suitability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_suitability Function that calculates the log(suitability) — get_suitability","text":"vector suitability","code":""},{"path":"http://alrobles.github.io/nicher/reference/get_suitability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_suitability Function that calculates the log(suitability) — get_suitability","text":"","code":"pars <- get_negloglike_optimr_par(head(spOccPnts, 10), samMPts, fastmode = TRUE, itnmax = 1) #> fastmode #> TRUE #> Optimization starting  #> Methods used: #> L-BFGS-B #> Optimization finished.  #> L-BFGS-B is the returned method get_suitability(spOccPnts, pars) #>  [1] 0.915758125 0.154292726 0.427894206 0.290579611 0.050198165 0.159878360 #>  [7] 0.061999401 0.416716329 0.291801927 0.577055231 0.025700023 0.058426207 #> [13] 0.244305004 0.407373661 0.048101978 0.923841938 0.034415976 0.029771727 #> [19] 0.026714557 0.071101181 0.046989809 0.009001979 0.039177911 0.013646957 #> [25] 0.010815686 0.031154608 0.019897935 0.006994209 0.007060055 0.045644363 #> [31] 0.024224954 0.020559529 0.565013414 0.116001391 0.090225498 0.290244925 #> [37] 0.231235693 0.216829972 0.021779331 0.014860112 0.021041879 0.120453224 #> [43] 0.107388617 0.014500360 0.019106568 0.714222740 0.025911605 0.069760227 #> [49] 0.040940437 0.220137542 0.266620629 0.053955070 0.117319370 0.136159929 #> [55] 0.377512734 0.038190510 0.267222654 0.290244925 0.838787608 0.190839532 #> [61] 0.197259791 0.565013414 0.116774376 0.037260418 0.923841938 0.023197909 #> [67] 0.047238927 0.072268249 0.033604180 0.052329153 0.092089718 0.703420330 #> [73] 0.841041997"},{"path":"http://alrobles.github.io/nicher/reference/negloglike_multivariable.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative log likelyhood — negloglike_multivariable","title":"Negative log likelyhood — negloglike_multivariable","text":"Negative log likelyhood","code":""},{"path":"http://alrobles.github.io/nicher/reference/negloglike_multivariable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative log likelyhood — negloglike_multivariable","text":"","code":"negloglike_multivariable(mu, S, sam1, sam2)"},{"path":"http://alrobles.github.io/nicher/reference/negloglike_multivariable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative log likelyhood — negloglike_multivariable","text":"mu vector mu parameters S covariance matrix environmental data frame sam1 data.frame containing original sample environmental combinations correspond presences sam2 data.frame containing second random sample environmental combinations come area study (M)","code":""},{"path":"http://alrobles.github.io/nicher/reference/negloglike_multivariable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative log likelyhood — negloglike_multivariable","text":"negative log likelihood value","code":""},{"path":"http://alrobles.github.io/nicher/reference/negloglike_multivariable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative log likelyhood — negloglike_multivariable","text":"","code":"par <- get_ellip_par(spOccPnts) negloglike_multivariable(par$mu, par$S, spOccPnts, samMPts) #> [1] 661.8376"},{"path":"http://alrobles.github.io/nicher/reference/plot.ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for ","title":"Plot method for ","text":"Plot method \"ellipse\" class","code":""},{"path":"http://alrobles.github.io/nicher/reference/plot.ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for ","text":"","code":"# S3 method for ellipse plot(x, ...)"},{"path":"http://alrobles.github.io/nicher/reference/plot.ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for ","text":"x object class \"ellipse\" ... arguments passed methods","code":""},{"path":"http://alrobles.github.io/nicher/reference/predict.ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for ","title":"Predict method for ","text":"Predict method \"ellipse\" class","code":""},{"path":"http://alrobles.github.io/nicher/reference/predict.ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for ","text":"","code":"# S3 method for ellipse predict(object, layers, returnTable = FALSE, ...)"},{"path":"http://alrobles.github.io/nicher/reference/predict.ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for ","text":"object object class \"ellipse\" layers object class \"rast\" terra package evaluate ellipse model returnTable logical true return table instead raster prediction ... arguments passed methods","code":""},{"path":"http://alrobles.github.io/nicher/reference/print.ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for ","title":"Print method for ","text":"Print method \"ellipse\" class","code":""},{"path":"http://alrobles.github.io/nicher/reference/print.ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for ","text":"","code":"# S3 method for ellipse print(x, ...)"},{"path":"http://alrobles.github.io/nicher/reference/print.ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for ","text":"x object class \"ellipse\" ... arguments passed methods","code":""},{"path":"http://alrobles.github.io/nicher/reference/quad.html","id":null,"dir":"Reference","previous_headings":"","what":"quad Function that calculates quadratic terms — quad","title":"quad Function that calculates quadratic terms — quad","text":"quad  Function calculates quadratic terms","code":""},{"path":"http://alrobles.github.io/nicher/reference/quad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quad Function that calculates quadratic terms — quad","text":"","code":"quad(xi, mu, A)"},{"path":"http://alrobles.github.io/nicher/reference/quad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quad Function that calculates quadratic terms — quad","text":"xi environmental data frame mu vector average environmental variables matrix inverse covariance environmental variables","code":""},{"path":"http://alrobles.github.io/nicher/reference/quad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quad Function that calculates quadratic terms — quad","text":"function return matrix quadratic form","code":""},{"path":"http://alrobles.github.io/nicher/reference/rawSpOccPnts.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw species ocurrence points from Abeillia abeillei presence points after download and clean from GBIF. This is a hummingbird example. A dataset with three variables. Contains scientific name, longitude and latitude #' @format A data frame with 73 rows and 3 variables:  species Species name long Decimal longitide geographical cooordinate, in degrees lat Decimal latitude geographical cooordinate, in degrees  — rawSpOccPnts","title":"Raw species ocurrence points from Abeillia abeillei presence points after download and clean from GBIF. This is a hummingbird example. A dataset with three variables. Contains scientific name, longitude and latitude #' @format A data frame with 73 rows and 3 variables:  species Species name long Decimal longitide geographical cooordinate, in degrees lat Decimal latitude geographical cooordinate, in degrees  — rawSpOccPnts","text":"Raw species ocurrence points Abeillia abeillei presence points download clean GBIF. hummingbird example. dataset three variables. Contains scientific name, longitude latitude #' @format data frame 73 rows 3 variables: species Species name long Decimal longitide geographical cooordinate, degrees lat Decimal latitude geographical cooordinate, degrees","code":""},{"path":"http://alrobles.github.io/nicher/reference/rawSpOccPnts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw species ocurrence points from Abeillia abeillei presence points after download and clean from GBIF. This is a hummingbird example. A dataset with three variables. Contains scientific name, longitude and latitude #' @format A data frame with 73 rows and 3 variables:  species Species name long Decimal longitide geographical cooordinate, in degrees lat Decimal latitude geographical cooordinate, in degrees  — rawSpOccPnts","text":"","code":"rawSpOccPnts"},{"path":"http://alrobles.github.io/nicher/reference/rawSpOccPnts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raw species ocurrence points from Abeillia abeillei presence points after download and clean from GBIF. This is a hummingbird example. A dataset with three variables. Contains scientific name, longitude and latitude #' @format A data frame with 73 rows and 3 variables:  species Species name long Decimal longitide geographical cooordinate, in degrees lat Decimal latitude geographical cooordinate, in degrees  — rawSpOccPnts","text":"object class data.frame 73 rows 3 columns.","code":""},{"path":"http://alrobles.github.io/nicher/reference/rawSpOccPnts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Raw species ocurrence points from Abeillia abeillei presence points after download and clean from GBIF. This is a hummingbird example. A dataset with three variables. Contains scientific name, longitude and latitude #' @format A data frame with 73 rows and 3 variables:  species Species name long Decimal longitide geographical cooordinate, in degrees lat Decimal latitude geographical cooordinate, in degrees  — rawSpOccPnts","text":"<doi:10.1016/j.ecolmodel.2021.109823>","code":""},{"path":"http://alrobles.github.io/nicher/reference/samMPts.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — samMPts","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — samMPts","text":"Samples points M hypothesis  estimate negative log likelihood Abeillia abeillei presence points. hummingbird example. dataset two variables containing points contains 2 bioclimatic variables #' @format data frame 10000 rows 2 variables: bio1WH temperature, C bio12WH precipitaion, mm","code":""},{"path":"http://alrobles.github.io/nicher/reference/samMPts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — samMPts","text":"","code":"samMPts"},{"path":"http://alrobles.github.io/nicher/reference/samMPts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — samMPts","text":"object class matrix (inherits array) 10000 rows 2 columns.","code":""},{"path":"http://alrobles.github.io/nicher/reference/samMPts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — samMPts","text":"<doi:10.1016/j.ecolmodel.2021.109823>","code":""},{"path":"http://alrobles.github.io/nicher/reference/samMPts_1_12_19.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH Yemperature, in C bio12WH Precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — samMPts_1_12_19","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH Yemperature, in C bio12WH Precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — samMPts_1_12_19","text":"Samples points M hypothesis  estimate negative log likelihood Abeillia abeillei presence points. hummingbird example. dataset two variables containing points contains 2 bioclimatic variables #' @format data frame 10000 rows 2 variables: bio1WH Yemperature, C bio12WH Precipitaion, mm bio19WH Precipitation Coldest Quarter, mm","code":""},{"path":"http://alrobles.github.io/nicher/reference/samMPts_1_12_19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH Yemperature, in C bio12WH Precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — samMPts_1_12_19","text":"","code":"samMPts_1_12_19"},{"path":"http://alrobles.github.io/nicher/reference/samMPts_1_12_19.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH Yemperature, in C bio12WH Precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — samMPts_1_12_19","text":"object class matrix (inherits array) 10000 rows 3 columns.","code":""},{"path":"http://alrobles.github.io/nicher/reference/samMPts_1_12_19.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Samples points from M hypothesis to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 10000 rows and 2 variables:  bio1WH Yemperature, in C bio12WH Precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — samMPts_1_12_19","text":"<doi:10.1016/j.ecolmodel.2021.109823>","code":""},{"path":"http://alrobles.github.io/nicher/reference/sam_polyM.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample environmental points from M hypothesis — sam_polyM","title":"Sample environmental points from M hypothesis — sam_polyM","text":"Sample environmental points M hypothesis","code":""},{"path":"http://alrobles.github.io/nicher/reference/sam_polyM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample environmental points from M hypothesis — sam_polyM","text":"","code":"sam_polyM(M.shp, env, N = 100)"},{"path":"http://alrobles.github.io/nicher/reference/sam_polyM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample environmental points from M hypothesis — sam_polyM","text":"M.shp shapefile M hypothesis species env stack raster environmental variables extract information N numeric number points sample, default 10 000","code":""},{"path":"http://alrobles.github.io/nicher/reference/sam_polyM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample environmental points from M hypothesis — sam_polyM","text":"data frame sample environmental values inside M polygon","code":""},{"path":"http://alrobles.github.io/nicher/reference/sam_polyM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample environmental points from M hypothesis — sam_polyM","text":"","code":"M_path <- system.file(\"extdata\", \"Mshp_test.rds\", package=\"nicher\") Mshp <- terra::unwrap(readr::read_rds(M_path)) stack_path <- system.file(\"extdata\", \"stack_1_12_crop.rds\", package=\"nicher\") stack_1_12 <- terra::unwrap(readr::read_rds(stack_path)) sam_polyM(M.shp = Mshp, N = 5, env = stack_1_12) #>        bio1WH bio12WH #> [1,] 27.97160    1358 #> [2,] 19.08194    1830 #> [3,] 28.58866    1562 #> [4,] 25.78077    2003 #> [5,] 23.40339    1560"},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts.html","id":null,"dir":"Reference","previous_headings":"","what":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — spOccPnts","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — spOccPnts","text":"Species ocurrence points estimate negative log likelihood Abeillia abeillei presence points. hummingbird example. dataset two variables containing points contains 2 bioclimatic variables #' @format data frame 73 rows 2 variables: bio1WH temperature, C bio12WH precipitaion, mm","code":""},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — spOccPnts","text":"","code":"spOccPnts"},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — spOccPnts","text":"object class matrix (inherits array) 73 rows 2 columns.","code":""},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm  — spOccPnts","text":"doi:10.1016/j.ecolmodel.2021.109823","code":""},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts_1_12_19.html","id":null,"dir":"Reference","previous_headings":"","what":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — spOccPnts_1_12_19","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — spOccPnts_1_12_19","text":"Species ocurrence points estimate negative log likelihood Abeillia abeillei presence points. hummingbird example. dataset two variables containing points contains 2 bioclimatic variables #' @format data frame 73 rows 2 variables: bio1WH temperature, C bio12WH precipitaion, mm bio19WH Precipitation Coldest Quarter, mm","code":""},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts_1_12_19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — spOccPnts_1_12_19","text":"","code":"spOccPnts_1_12_19"},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts_1_12_19.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — spOccPnts_1_12_19","text":"object class data.frame 73 rows 3 columns.","code":""},{"path":"http://alrobles.github.io/nicher/reference/spOccPnts_1_12_19.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species ocurrence points to estimate negative log likelihood from Abeillia abeillei presence points. This is a hummingbird example. A dataset with two variables containing points contains 2 bioclimatic variables #' @format A data frame with 73 rows and 2 variables:  bio1WH temperature, in C bio12WH precipitaion, in mm bio19WH Precipitation of Coldest Quarter, in mm  — spOccPnts_1_12_19","text":"<doi:10.1016/j.ecolmodel.2021.109823>","code":""},{"path":"http://alrobles.github.io/nicher/reference/url_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Url Exists — url_exists","title":"Url Exists — url_exists","text":"Url Exists","code":""},{"path":"http://alrobles.github.io/nicher/reference/url_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Url Exists — url_exists","text":"","code":"url_exists(x, quiet = FALSE, ...)"},{"path":"http://alrobles.github.io/nicher/reference/url_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Url Exists — url_exists","text":"x string url check exist quiet logic quiets ... Ellipsis","code":""},{"path":"http://alrobles.github.io/nicher/reference/url_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Url Exists — url_exists","text":"logic value url exists","code":""}]
